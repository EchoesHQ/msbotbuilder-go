openapi: 3.0.1
info:
  contact:
    email: botframework@microsoft.com
    name: Bot Framework
    url: https://botframework.com
  description: "The Bot Connector REST API allows your bot to send and receive messages\
    \ to channels configured in the\r\n[Bot Framework Developer Portal](https://dev.botframework.com).\
    \ The Connector service uses industry-standard REST\r\nand JSON over HTTPS.\r\n\
    \r\nClient libraries for this REST API are available. See below for a list.\r\n\
    \r\nMany bots will use both the Bot Connector REST API and the associated [Bot\
    \ State REST API](/en-us/restapi/state). The\r\nBot State REST API allows a bot\
    \ to store and retrieve state associated with users and conversations.\r\n\r\n\
    Authentication for both the Bot Connector and Bot State REST APIs is accomplished\
    \ with JWT Bearer tokens, and is\r\ndescribed in detail in the [Connector Authentication](/en-us/restapi/authentication)\
    \ document.\r\n\r\n# Client Libraries for the Bot Connector REST API\r\n\r\n*\
    \ [Bot Builder for C#](/en-us/csharp/builder/sdkreference/)\r\n* [Bot Builder\
    \ for Node.js](/en-us/node/builder/overview/)\r\n* Generate your own from the\
    \ [Connector API Swagger file](https://raw.githubusercontent.com/Microsoft/BotBuilder/master/CSharp/Library/Microsoft.Bot.Connector.Shared/Swagger/ConnectorAPI.json)\r\
    \n\r\nÂ© 2016 Microsoft"
  license:
    name: The MIT License (MIT)
    url: https://opensource.org/licenses/MIT
  termsOfService: https://www.microsoft.com/en-us/legal/intellectualproperty/copyright/default.aspx
  title: Microsoft Bot Connector API - v3.0
  version: v3
servers:
- url: https://api.botframework.com/
paths:
  /v3/attachments/{attachmentId}:
    get:
      description: Get AttachmentInfo structure describing the attachment views
      operationId: Attachments_GetAttachmentInfo
      parameters:
      - description: attachment id
        in: path
        name: attachmentId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/AttachmentInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/AttachmentInfo'
            text/xml:
              schema:
                $ref: '#/components/schemas/AttachmentInfo'
          description: "An attachmentInfo object is returned which describes the:\r\
            \n* type of the attachment\r\n* name of the attachment\r\n\r\n\r\nand\
            \ an array of views:\r\n* Size - size of the object\r\n* ViewId - View\
            \ Id which can be used to fetch a variation on the content (ex: original\
            \ or thumbnail)"
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed and the response is an error object describing
            the status code and failure.
      summary: GetAttachmentInfo
      tags:
      - Attachments
  /v3/attachments/{attachmentId}/views/{viewId}:
    get:
      description: Get the named view as binary content
      operationId: Attachments_GetAttachment
      parameters:
      - description: attachment id
        in: path
        name: attachmentId
        required: true
        schema:
          type: string
      - description: View id from attachmentInfo
        in: path
        name: viewId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                format: binary
                type: string
            text/json:
              schema:
                format: binary
                type: string
            application/xml:
              schema:
                format: binary
                type: string
            text/xml:
              schema:
                format: binary
                type: string
          description: Attachment stream
        301:
          content: {}
          description: The Location header describes where the content is now.
        302:
          content: {}
          description: The Location header describes where the content is now.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed and the response is an error object describing
            the status code and failure.
      summary: GetAttachment
      tags:
      - Attachments
  /v3/conversations:
    get:
      description: "List the Conversations in which this bot has participated.\r\n\
        \r\nGET from this method with a skip token\r\n\r\nThe return value is a ConversationsResult,\
        \ which contains an array of ConversationMembers and a skip token.  If the\
        \ skip token is not empty, then \r\nthere are further values to be returned.\
        \ Call this method again with the returned token to get more values.\r\n\r\
        \nEach ConversationMembers object contains the ID of the conversation and\
        \ an array of ChannelAccounts that describe the members of the conversation."
      operationId: Conversations_GetConversations
      parameters:
      - description: skip or continuation token
        in: query
        name: continuationToken
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationsResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ConversationsResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConversationsResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ConversationsResult'
          description: "An object will be returned containing \r\n* an array (Conversations)\
            \ of ConversationMembers objects\r\n* a continuation token\r\n\r\nEach\
            \ ConversationMembers object contains:\r\n* the Id of the conversation\r\
            \n* an array (Members) of ChannelAccount objects"
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed and the response is an error object describing
            the status code and failure.
      summary: GetConversations
      tags:
      - Conversations
    post:
      description: "Create a new Conversation.\r\n\r\nPOST to this method with a\r\
        \n* Bot being the bot creating the conversation\r\n* IsGroup set to true if\
        \ this is not a direct message (default is false)\r\n* Array containing the\
        \ members to include in the conversation\r\n\r\nThe return value is a ResourceResponse\
        \ which contains a conversation id which is suitable for use\r\nin the message\
        \ payload and REST API uris.\r\n\r\nMost channels only support the semantics\
        \ of bots initiating a direct message conversation.  An example of how to\
        \ do that would be:\r\n\r\n```\r\nvar resource = await connector.conversations.CreateConversation(new\
        \ ConversationParameters(){ Bot = bot, members = new ChannelAccount[] { new\
        \ ChannelAccount(\"user1\") } );\r\nawait connect.Conversations.SendToConversationAsync(resource.Id,\
        \ new Activity() ... ) ;\r\n\r\n```"
      operationId: Conversations_CreateConversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/ConversationParameters'
          application/xml:
            schema:
              $ref: '#/components/schemas/ConversationParameters'
          text/xml:
            schema:
              $ref: '#/components/schemas/ConversationParameters'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationParameters'
        description: Parameters to create the conversation from
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ConversationResourceResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConversationResourceResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ConversationResourceResponse'
          description: "An object will be returned containing \r\n* the ID for the\
            \ conversation\r\n* ActivityId for the activity if provided.  If ActivityId\
            \ is null then the channel doesn't support returning resource id's for\
            \ activity."
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ConversationResourceResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConversationResourceResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ConversationResourceResponse'
          description: "An object will be returned containing \r\n* the ID for the\
            \ conversation\r\n* ActivityId for the activity if provided.  If ActivityId\
            \ is null then the channel doesn't support returning resource id's for\
            \ activity."
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ConversationResourceResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConversationResourceResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ConversationResourceResponse'
          description: "An object will be returned containing \r\n* the ID for the\
            \ conversation\r\n* ActivityId for the activity if provided.  If ActivityId\
            \ is null then the channel doesn't support returning resource id's for\
            \ activity."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed and the response is an error object describing
            the status code and failure.
      summary: CreateConversation
      tags:
      - Conversations
      x-codegen-request-body-name: parameters
  /v3/conversations/{conversationId}/activities:
    post:
      description: "This method allows you to send an activity to the end of a conversation.\r\
        \n\r\nThis is slightly different from ReplyToActivity().\r\n* SendToConversation(conversationId)\
        \ - will append the activity to the end of the conversation according to the\
        \ timestamp or semantics of the channel.\r\n* ReplyToActivity(conversationId,ActivityId)\
        \ - adds the activity as a reply to another activity, if the channel supports\
        \ it. If the channel does not support nested replies, ReplyToActivity falls\
        \ back to SendToConversation.\r\n\r\nUse ReplyToActivity when replying to\
        \ a specific activity in the conversation.\r\n\r\nUse SendToConversation in\
        \ all other cases."
      operationId: Conversations_SendToConversation
      parameters:
      - description: Conversation ID
        in: path
        name: conversationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
          text/json:
            schema:
              $ref: '#/components/schemas/Activity'
          application/xml:
            schema:
              $ref: '#/components/schemas/Activity'
          text/xml:
            schema:
              $ref: '#/components/schemas/Activity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
        description: Activity to send
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: An object will be returned containing the ID for the resource.
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: A ResourceResponse object will be returned containing the ID
            for the resource.
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: An object will be returned containing the ID for the resource.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed and the response is an error object describing
            the status code and failure.
      summary: SendToConversation
      tags:
      - Conversations
      x-codegen-request-body-name: activity
  /v3/conversations/{conversationId}/activities/history:
    post:
      description: "This method allows you to upload the historic activities to the\
        \ conversation.\r\n\r\nSender must ensure that the historic activities have\
        \ unique ids and appropriate timestamps. The ids are used by the client to\
        \ deal with duplicate activities and the timestamps are used by the client\
        \ to render the activities in the right order."
      operationId: Conversations_SendConversationHistory
      parameters:
      - description: Conversation ID
        in: path
        name: conversationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transcript'
          text/json:
            schema:
              $ref: '#/components/schemas/Transcript'
          application/xml:
            schema:
              $ref: '#/components/schemas/Transcript'
          text/xml:
            schema:
              $ref: '#/components/schemas/Transcript'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transcript'
        description: Historic activities
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: An object will be returned containing the ID for the resource.
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: A ResourceResponse object will be returned containing the ID
            for the resource.
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: An object will be returned containing the ID for the resource.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed and the response is an error object describing
            the status code and failure.
      summary: SendConversationHistory
      tags:
      - Conversations
      x-codegen-request-body-name: history
  /v3/conversations/{conversationId}/activities/{activityId}:
    delete:
      description: "Delete an existing activity.\r\n\r\nSome channels allow you to\
        \ delete an existing activity, and if successful this method will remove the\
        \ specified activity."
      operationId: Conversations_DeleteActivity
      parameters:
      - description: Conversation ID
        in: path
        name: conversationId
        required: true
        schema:
          type: string
      - description: activityId to delete
        in: path
        name: activityId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: The operation succeeded, there is no response.
        202:
          content: {}
          description: The request has been accepted for processing, but the processing
            has not been completed
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed and the response is an error object describing
            the status code and failure.
      summary: DeleteActivity
      tags:
      - Conversations
    post:
      description: "This method allows you to reply to an activity.\r\n\r\nThis is\
        \ slightly different from SendToConversation().\r\n* SendToConversation(conversationId)\
        \ - will append the activity to the end of the conversation according to the\
        \ timestamp or semantics of the channel.\r\n* ReplyToActivity(conversationId,ActivityId)\
        \ - adds the activity as a reply to another activity, if the channel supports\
        \ it. If the channel does not support nested replies, ReplyToActivity falls\
        \ back to SendToConversation.\r\n\r\nUse ReplyToActivity when replying to\
        \ a specific activity in the conversation.\r\n\r\nUse SendToConversation in\
        \ all other cases."
      operationId: Conversations_ReplyToActivity
      parameters:
      - description: Conversation ID
        in: path
        name: conversationId
        required: true
        schema:
          type: string
      - description: activityId the reply is to (OPTIONAL)
        in: path
        name: activityId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
          text/json:
            schema:
              $ref: '#/components/schemas/Activity'
          application/xml:
            schema:
              $ref: '#/components/schemas/Activity'
          text/xml:
            schema:
              $ref: '#/components/schemas/Activity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
        description: Activity to send
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: An object will be returned containing the ID for the resource.
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: A ResourceResponse object will be returned containing the ID
            for the resource.
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: An object will be returned containing the ID for the resource.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed and the response is an error object describing
            the status code and failure.
      summary: ReplyToActivity
      tags:
      - Conversations
      x-codegen-request-body-name: activity
    put:
      description: "Edit an existing activity.\r\n\r\nSome channels allow you to edit\
        \ an existing activity to reflect the new state of a bot conversation.\r\n\
        \r\nFor example, you can remove buttons after someone has clicked \"Approve\"\
        \ button."
      operationId: Conversations_UpdateActivity
      parameters:
      - description: Conversation ID
        in: path
        name: conversationId
        required: true
        schema:
          type: string
      - description: activityId to update
        in: path
        name: activityId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
          text/json:
            schema:
              $ref: '#/components/schemas/Activity'
          application/xml:
            schema:
              $ref: '#/components/schemas/Activity'
          text/xml:
            schema:
              $ref: '#/components/schemas/Activity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
        description: replacement Activity
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: An object will be returned containing the ID for the resource.
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: A ResourceResponse object will be returned containing the ID
            for the resource.
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: An object will be returned containing the ID for the resource.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed and the response is an error object describing
            the status code and failure.
      summary: UpdateActivity
      tags:
      - Conversations
      x-codegen-request-body-name: activity
  /v3/conversations/{conversationId}/members:
    get:
      description: "Enumerate the members of a conversation. \r\n\r\nThis REST API\
        \ takes a ConversationId and returns an array of ChannelAccount objects representing\
        \ the members of the conversation."
      operationId: Conversations_GetConversationMembers
      parameters:
      - description: Conversation ID
        in: path
        name: conversationId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelAccount'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelAccount'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelAccount'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelAccount'
                type: array
          description: An array of ChannelAccount objects
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed and the response is an error object describing
            the status code and failure.
      summary: GetConversationMembers
      tags:
      - Conversations
  /v3/conversations/{conversationId}/pagedmembers:
    get:
      description: "Enumerate the members of a conversation one page at a time.\r\n\
        \r\nThis REST API takes a ConversationId. Optionally a pageSize and/or continuationToken\
        \ can be provided. It returns a PagedMembersResult, which contains an array\r\
        \nof ChannelAccounts representing the members of the conversation and a continuation\
        \ token that can be used to get more values.\r\n\r\nOne page of ChannelAccounts\
        \ records are returned with each call. The number of records in a page may\
        \ vary between channels and calls. The pageSize parameter can be used as \r\
        \na suggestion. If there are no additional results the response will not contain\
        \ a continuation token. If there are no members in the conversation the Members\
        \ will be empty or not present in the response.\r\n\r\nA response to a request\
        \ that has a continuation token from a prior request may rarely return members\
        \ from a previous request."
      operationId: Conversations_GetConversationPagedMembers
      parameters:
      - description: Conversation ID
        in: path
        name: conversationId
        required: true
        schema:
          type: string
      - description: Suggested page size
        in: query
        name: pageSize
        schema:
          format: int32
          type: integer
      - description: Continuation Token
        in: query
        name: continuationToken
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedMembersResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PagedMembersResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/PagedMembersResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/PagedMembersResult'
          description: OK
      summary: GetConversationPagedMembers
      tags:
      - Conversations
  /v3/conversations/{conversationId}/members/{memberId}:
    delete:
      description: "Deletes a member from a conversation. \r\n\r\nThis REST API takes\
        \ a ConversationId and a memberId (of type string) and removes that member\
        \ from the conversation. If that member was the last member\r\nof the conversation,\
        \ the conversation will also be deleted."
      operationId: Conversations_DeleteConversationMember
      parameters:
      - description: Conversation ID
        in: path
        name: conversationId
        required: true
        schema:
          type: string
      - description: ID of the member to delete from this conversation
        in: path
        name: memberId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: The operation succeeded, there is no response.
        204:
          content: {}
          description: The operation succeeded but no content was returned.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed and the response is an error object describing
            the status code and failure.
      summary: DeleteConversationMember
      tags:
      - Conversations
  /v3/conversations/{conversationId}/activities/{activityId}/members:
    get:
      description: "Enumerate the members of an activity. \r\n\r\nThis REST API takes\
        \ a ConversationId and a ActivityId, returning an array of ChannelAccount\
        \ objects representing the members of the particular activity in the conversation."
      operationId: Conversations_GetActivityMembers
      parameters:
      - description: Conversation ID
        in: path
        name: conversationId
        required: true
        schema:
          type: string
      - description: Activity ID
        in: path
        name: activityId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelAccount'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelAccount'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelAccount'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelAccount'
                type: array
          description: An array of ChannelAccount objects
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed and the response is an error object describing
            the status code and failure.
      summary: GetActivityMembers
      tags:
      - Conversations
  /v3/conversations/{conversationId}/attachments:
    post:
      description: "Upload an attachment directly into a channel's blob storage.\r\
        \n\r\nThis is useful because it allows you to store data in a compliant store\
        \ when dealing with enterprises.\r\n\r\nThe response is a ResourceResponse\
        \ which contains an AttachmentId which is suitable for using with the attachments\
        \ API."
      operationId: Conversations_UploadAttachment
      parameters:
      - description: Conversation ID
        in: path
        name: conversationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentData'
          text/json:
            schema:
              $ref: '#/components/schemas/AttachmentData'
          application/xml:
            schema:
              $ref: '#/components/schemas/AttachmentData'
          text/xml:
            schema:
              $ref: '#/components/schemas/AttachmentData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AttachmentData'
        description: Attachment data
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: An object will be returned containing the ID for the resource.
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: A ResourceResponse object will be returned containing the ID
            for the resource.
        202:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceResponse'
          description: An object will be returned containing the ID for the resource.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed and the response is an error object describing
            the status code and failure.
      summary: UploadAttachment
      tags:
      - Conversations
      x-codegen-request-body-name: attachmentUpload
components:
  schemas:
    AttachmentInfo:
      description: Metadata for an attachment
      example:
        name: name
        type: type
        views:
        - viewId: viewId
          size: 0
        - viewId: viewId
          size: 0
      properties:
        name:
          description: Name of the attachment
          type: string
        type:
          description: ContentType of the attachment
          type: string
        views:
          description: attachment views
          items:
            $ref: '#/components/schemas/AttachmentView'
          type: array
      type: object
    AttachmentView:
      description: Attachment View name and size
      example:
        viewId: viewId
        size: 0
      properties:
        viewId:
          description: Id of the attachment
          type: string
        size:
          description: Size of the attachment
          format: int32
          type: integer
      type: object
    ErrorResponse:
      description: An HTTP API response
      properties:
        error:
          $ref: '#/components/schemas/Error'
      type: object
    Error:
      description: Object representing error information
      properties:
        code:
          description: Error code
          type: string
        message:
          description: Error message
          type: string
        innerHttpError:
          $ref: '#/components/schemas/InnerHttpError'
      type: object
    InnerHttpError:
      description: Object representing inner http error
      properties:
        statusCode:
          description: HttpStatusCode from failed request
          format: int32
          type: integer
        body:
          description: Body from failed request
          properties: {}
          type: object
      type: object
    ConversationParameters:
      description: Parameters for creating a new conversation
      example:
        channelData: '{}'
        activity:
          channelData: '{}'
          attachments:
          - contentUrl: contentUrl
            name: name
            contentType: contentType
            content: '{}'
            thumbnailUrl: thumbnailUrl
          - contentUrl: contentUrl
            name: name
            contentType: contentType
            content: '{}'
            thumbnailUrl: thumbnailUrl
          serviceUrl: serviceUrl
          locale: locale
          localTimezone: localTimezone
          suggestedActions:
            to:
            - to
            - to
            actions:
            - image: image
              displayText: displayText
              channelData: '{}'
              text: text
              title: title
              value: '{}'
            - image: image
              displayText: displayText
              channelData: '{}'
              text: text
              title: title
              value: '{}'
          membersAdded:
          - name: name
            aadObjectId: aadObjectId
            id: id
          - name: name
            aadObjectId: aadObjectId
            id: id
          valueType: valueType
          localTimestamp: 2000-01-23T04:56:07.000+00:00
          action: action
          listenFor:
          - listenFor
          - listenFor
          from:
            name: name
            aadObjectId: aadObjectId
            id: id
          speak: speak
          id: id
          text: text
          relatesTo:
            activityId: activityId
            bot:
              name: name
              aadObjectId: aadObjectId
              id: id
            serviceUrl: serviceUrl
            user:
              name: name
              aadObjectId: aadObjectId
              id: id
            conversation:
              conversationType: conversationType
              tenantId: tenantId
              name: name
              aadObjectId: aadObjectId
              id: id
              isGroup: true
            channelId: channelId
          value: '{}'
          channelId: channelId
          conversation:
            conversationType: conversationType
            tenantId: tenantId
            name: name
            aadObjectId: aadObjectId
            id: id
            isGroup: true
          timestamp: 2000-01-23T04:56:07.000+00:00
          summary: summary
          replyToId: replyToId
          historyDisclosed: true
          reactionsAdded:
          - {}
          - {}
          label: label
          reactionsRemoved:
          - {}
          - {}
          membersRemoved:
          - name: name
            aadObjectId: aadObjectId
            id: id
          - name: name
            aadObjectId: aadObjectId
            id: id
          entities:
          - type: type
          - type: type
          recipient:
            name: name
            aadObjectId: aadObjectId
            id: id
          name: name
          topicName: topicName
          textHighlights:
          - text: text
            occurrence: 0
          - text: text
            occurrence: 0
          expiration: 2000-01-23T04:56:07.000+00:00
          callerId: callerId
          semanticAction:
            entities:
              key:
                type: type
            id: id
        bot:
          name: name
          aadObjectId: aadObjectId
          id: id
        members:
        - name: name
          aadObjectId: aadObjectId
          id: id
        - name: name
          aadObjectId: aadObjectId
          id: id
        tenantId: tenantId
        topicName: topicName
        isGroup: true
      properties:
        isGroup:
          description: IsGroup
          type: boolean
        bot:
          $ref: '#/components/schemas/ChannelAccount'
        members:
          description: Members to add to the conversation
          items:
            $ref: '#/components/schemas/ChannelAccount'
          type: array
        topicName:
          description: (Optional) Topic of the conversation (if supported by the channel)
          type: string
        tenantId:
          description: (Optional) The tenant ID in which the conversation should be
            created
          type: string
        activity:
          $ref: '#/components/schemas/Activity'
        channelData:
          description: Channel specific payload for creating the conversation
          properties: {}
          type: object
      type: object
    ChannelAccount:
      description: Channel account information needed to route a message
      example:
        name: name
        aadObjectId: aadObjectId
        id: id
      properties:
        id:
          description: 'Channel id for the user or bot on this channel (Example: joe@smith.com,
            or @joesmith or 123456)'
          type: string
        name:
          description: Display friendly name
          type: string
        aadObjectId:
          description: This account's object ID within Azure Active Directory (AAD)
          type: string
        role:
          $ref: '#/components/schemas/RoleTypes'
      type: object
    Activity:
      description: An Activity is the basic communication type for the Bot Framework
        3.0 protocol.
      example:
        channelData: '{}'
        attachments:
        - contentUrl: contentUrl
          name: name
          contentType: contentType
          content: '{}'
          thumbnailUrl: thumbnailUrl
        - contentUrl: contentUrl
          name: name
          contentType: contentType
          content: '{}'
          thumbnailUrl: thumbnailUrl
        serviceUrl: serviceUrl
        locale: locale
        localTimezone: localTimezone
        suggestedActions:
          to:
          - to
          - to
          actions:
          - image: image
            displayText: displayText
            channelData: '{}'
            text: text
            title: title
            value: '{}'
          - image: image
            displayText: displayText
            channelData: '{}'
            text: text
            title: title
            value: '{}'
        membersAdded:
        - name: name
          aadObjectId: aadObjectId
          id: id
        - name: name
          aadObjectId: aadObjectId
          id: id
        valueType: valueType
        localTimestamp: 2000-01-23T04:56:07.000+00:00
        action: action
        listenFor:
        - listenFor
        - listenFor
        from:
          name: name
          aadObjectId: aadObjectId
          id: id
        speak: speak
        id: id
        text: text
        relatesTo:
          activityId: activityId
          bot:
            name: name
            aadObjectId: aadObjectId
            id: id
          serviceUrl: serviceUrl
          user:
            name: name
            aadObjectId: aadObjectId
            id: id
          conversation:
            conversationType: conversationType
            tenantId: tenantId
            name: name
            aadObjectId: aadObjectId
            id: id
            isGroup: true
          channelId: channelId
        value: '{}'
        channelId: channelId
        conversation:
          conversationType: conversationType
          tenantId: tenantId
          name: name
          aadObjectId: aadObjectId
          id: id
          isGroup: true
        timestamp: 2000-01-23T04:56:07.000+00:00
        summary: summary
        replyToId: replyToId
        historyDisclosed: true
        reactionsAdded:
        - {}
        - {}
        label: label
        reactionsRemoved:
        - {}
        - {}
        membersRemoved:
        - name: name
          aadObjectId: aadObjectId
          id: id
        - name: name
          aadObjectId: aadObjectId
          id: id
        entities:
        - type: type
        - type: type
        recipient:
          name: name
          aadObjectId: aadObjectId
          id: id
        name: name
        topicName: topicName
        textHighlights:
        - text: text
          occurrence: 0
        - text: text
          occurrence: 0
        expiration: 2000-01-23T04:56:07.000+00:00
        callerId: callerId
        semanticAction:
          entities:
            key:
              type: type
          id: id
      properties:
        type:
          $ref: '#/components/schemas/ActivityTypes'
        id:
          description: Contains an ID that uniquely identifies the activity on the
            channel.
          type: string
        timestamp:
          description: Contains the date and time that the message was sent, in UTC,
            expressed in ISO-8601 format.
          format: date-time
          type: string
        localTimestamp:
          description: "Contains the local date and time of the message, expressed\
            \ in ISO-8601 format.\r\nFor example, 2016-09-23T13:07:49.4714686-07:00."
          format: date-time
          type: string
        localTimezone:
          description: "Contains the name of the local timezone of the message, expressed\
            \ in IANA Time Zone database format.\r\nFor example, America/Los_Angeles."
          type: string
        callerId:
          description: "A string containing an IRI identifying the caller of a bot.\
            \ This field is not intended to be transmitted\r\nover the wire, but is\
            \ instead populated by bots and clients based on cryptographically verifiable\
            \ data\r\nthat asserts the identity of the callers (e.g. tokens)."
          type: string
        serviceUrl:
          description: Contains the URL that specifies the channel's service endpoint.
            Set by the channel.
          type: string
        channelId:
          description: Contains an ID that uniquely identifies the channel. Set by
            the channel.
          type: string
        from:
          $ref: '#/components/schemas/ChannelAccount'
        conversation:
          $ref: '#/components/schemas/ConversationAccount'
        recipient:
          $ref: '#/components/schemas/ChannelAccount'
        textFormat:
          $ref: '#/components/schemas/TextFormatTypes'
        attachmentLayout:
          $ref: '#/components/schemas/AttachmentLayoutTypes'
        membersAdded:
          description: The collection of members added to the conversation.
          items:
            $ref: '#/components/schemas/ChannelAccount'
          type: array
        membersRemoved:
          description: The collection of members removed from the conversation.
          items:
            $ref: '#/components/schemas/ChannelAccount'
          type: array
        reactionsAdded:
          description: The collection of reactions added to the conversation.
          items:
            $ref: '#/components/schemas/MessageReaction'
          type: array
        reactionsRemoved:
          description: The collection of reactions removed from the conversation.
          items:
            $ref: '#/components/schemas/MessageReaction'
          type: array
        topicName:
          description: The updated topic name of the conversation.
          type: string
        historyDisclosed:
          description: Indicates whether the prior history of the channel is disclosed.
          type: boolean
        locale:
          description: "A locale name for the contents of the text field.\r\nThe locale\
            \ name is a combination of an ISO 639 two- or three-letter culture code\
            \ associated with a language\r\nand an ISO 3166 two-letter subculture\
            \ code associated with a country or region.\r\nThe locale name can also\
            \ correspond to a valid BCP-47 language tag."
          type: string
        text:
          description: The text content of the message.
          type: string
        speak:
          description: The text to speak.
          type: string
        inputHint:
          $ref: '#/components/schemas/InputHints'
        summary:
          description: The text to display if the channel cannot render cards.
          type: string
        suggestedActions:
          $ref: '#/components/schemas/SuggestedActions'
        attachments:
          description: Attachments
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        entities:
          description: Represents the entities that were mentioned in the message.
          items:
            $ref: '#/components/schemas/Entity'
          type: array
        channelData:
          description: Contains channel-specific content.
          properties: {}
          type: object
        action:
          description: Indicates whether the recipient of a contactRelationUpdate
            was added or removed from the sender's contact list.
          type: string
        replyToId:
          description: Contains the ID of the message to which this message is a reply.
          type: string
        label:
          description: A descriptive label for the activity.
          type: string
        valueType:
          description: The type of the activity's value object.
          type: string
        value:
          description: A value that is associated with the activity.
          properties: {}
          type: object
        name:
          description: The name of the operation associated with an invoke or event
            activity.
          type: string
        relatesTo:
          $ref: '#/components/schemas/ConversationReference'
        code:
          $ref: '#/components/schemas/EndOfConversationCodes'
        expiration:
          description: The time at which the activity should be considered to be "expired"
            and should not be presented to the recipient.
          format: date-time
          type: string
        importance:
          $ref: '#/components/schemas/ActivityImportance'
        deliveryMode:
          $ref: '#/components/schemas/DeliveryModes'
        listenFor:
          description: List of phrases and references that speech and language priming
            systems should listen for
          items:
            type: string
          type: array
        textHighlights:
          description: The collection of text fragments to highlight when the activity
            contains a ReplyToId value.
          items:
            $ref: '#/components/schemas/TextHighlight'
          type: array
        semanticAction:
          $ref: '#/components/schemas/SemanticAction'
      type: object
    ConversationAccount:
      description: Conversation account represents the identity of the conversation
        within a channel
      example:
        conversationType: conversationType
        tenantId: tenantId
        name: name
        aadObjectId: aadObjectId
        id: id
        isGroup: true
      properties:
        isGroup:
          description: Indicates whether the conversation contains more than two participants
            at the time the activity was generated
          type: boolean
        conversationType:
          description: Indicates the type of the conversation in channels that distinguish
            between conversation types
          type: string
        tenantId:
          description: This conversation's tenant ID
          type: string
        id:
          description: 'Channel id for the user or bot on this channel (Example: joe@smith.com,
            or @joesmith or 123456)'
          type: string
        name:
          description: Display friendly name
          type: string
        aadObjectId:
          description: This account's object ID within Azure Active Directory (AAD)
          type: string
        role:
          $ref: '#/components/schemas/RoleTypes'
      type: object
    MessageReaction:
      description: Message reaction object
      example: {}
      properties:
        type:
          $ref: '#/components/schemas/MessageReactionTypes'
      type: object
    SuggestedActions:
      description: SuggestedActions that can be performed
      example:
        to:
        - to
        - to
        actions:
        - image: image
          displayText: displayText
          channelData: '{}'
          text: text
          title: title
          value: '{}'
        - image: image
          displayText: displayText
          channelData: '{}'
          text: text
          title: title
          value: '{}'
      properties:
        to:
          description: Ids of the recipients that the actions should be shown to.  These
            Ids are relative to the channelId and a subset of all recipients of the
            activity
          items:
            type: string
          type: array
        actions:
          description: Actions that can be shown to the user
          items:
            $ref: '#/components/schemas/CardAction'
          type: array
      type: object
    Attachment:
      description: An attachment within an activity
      example:
        contentUrl: contentUrl
        name: name
        contentType: contentType
        content: '{}'
        thumbnailUrl: thumbnailUrl
      properties:
        contentType:
          description: mimetype/Contenttype for the file
          type: string
        contentUrl:
          description: Content Url
          type: string
        content:
          description: Embedded content
          properties: {}
          type: object
        name:
          description: (OPTIONAL) The name of the attachment
          type: string
        thumbnailUrl:
          description: (OPTIONAL) Thumbnail associated with attachment
          type: string
      type: object
    Entity:
      description: Metadata object pertaining to an activity
      example:
        type: type
      properties:
        type:
          description: Type of this entity (RFC 3987 IRI)
          type: string
      type: object
    ConversationReference:
      description: An object relating to a particular point in a conversation
      example:
        activityId: activityId
        bot:
          name: name
          aadObjectId: aadObjectId
          id: id
        serviceUrl: serviceUrl
        user:
          name: name
          aadObjectId: aadObjectId
          id: id
        conversation:
          conversationType: conversationType
          tenantId: tenantId
          name: name
          aadObjectId: aadObjectId
          id: id
          isGroup: true
        channelId: channelId
      properties:
        activityId:
          description: (Optional) ID of the activity to refer to
          type: string
        user:
          $ref: '#/components/schemas/ChannelAccount'
        bot:
          $ref: '#/components/schemas/ChannelAccount'
        conversation:
          $ref: '#/components/schemas/ConversationAccount'
        channelId:
          description: Channel ID
          type: string
        serviceUrl:
          description: Service endpoint where operations concerning the referenced
            conversation may be performed
          type: string
      type: object
    TextHighlight:
      description: Refers to a substring of content within another field
      example:
        text: text
        occurrence: 0
      properties:
        text:
          description: Defines the snippet of text to highlight
          type: string
        occurrence:
          description: Occurrence of the text field within the referenced text, if
            multiple exist.
          format: int32
          type: integer
      type: object
    SemanticAction:
      description: Represents a reference to a programmatic action
      example:
        entities:
          key:
            type: type
        id: id
      properties:
        state:
          $ref: '#/components/schemas/SemanticActionStates'
        id:
          description: ID of this action
          type: string
        entities:
          additionalProperties:
            $ref: '#/components/schemas/Entity'
          description: Entities associated with this action
          type: object
      type: object
    CardAction:
      description: A clickable action
      example:
        image: image
        displayText: displayText
        channelData: '{}'
        text: text
        title: title
        value: '{}'
      properties:
        type:
          $ref: '#/components/schemas/ActionTypes'
        title:
          description: Text description which appears on the button
          type: string
        image:
          description: Image URL which will appear on the button, next to text label
          type: string
        text:
          description: Text for this action
          type: string
        displayText:
          description: (Optional) text to display in the chat feed if the button is
            clicked
          type: string
        value:
          description: Supplementary parameter for action. Content of this property
            depends on the ActionType
          properties: {}
          type: object
        channelData:
          description: Channel-specific data associated with this action
          properties: {}
          type: object
      type: object
    ConversationResourceResponse:
      description: A response containing a resource
      example:
        activityId: activityId
        serviceUrl: serviceUrl
        id: id
      properties:
        activityId:
          description: ID of the Activity (if sent)
          type: string
        serviceUrl:
          description: Service endpoint where operations concerning the conversation
            may be performed
          type: string
        id:
          description: Id of the resource
          type: string
      type: object
    ConversationsResult:
      description: Conversations result
      example:
        conversations:
        - members:
          - name: name
            aadObjectId: aadObjectId
            id: id
          - name: name
            aadObjectId: aadObjectId
            id: id
          id: id
        - members:
          - name: name
            aadObjectId: aadObjectId
            id: id
          - name: name
            aadObjectId: aadObjectId
            id: id
          id: id
        continuationToken: continuationToken
      properties:
        continuationToken:
          description: Paging token
          type: string
        conversations:
          description: List of conversations
          items:
            $ref: '#/components/schemas/ConversationMembers'
          type: array
      type: object
    ConversationMembers:
      description: Conversation and its members
      example:
        members:
        - name: name
          aadObjectId: aadObjectId
          id: id
        - name: name
          aadObjectId: aadObjectId
          id: id
        id: id
      properties:
        id:
          description: Conversation ID
          type: string
        members:
          description: List of members in this conversation
          items:
            $ref: '#/components/schemas/ChannelAccount'
          type: array
      type: object
    ResourceResponse:
      description: A response containing a resource ID
      example:
        id: id
      properties:
        id:
          description: Id of the resource
          type: string
      type: object
    Transcript:
      description: Transcript
      example:
        activities:
        - channelData: '{}'
          attachments:
          - contentUrl: contentUrl
            name: name
            contentType: contentType
            content: '{}'
            thumbnailUrl: thumbnailUrl
          - contentUrl: contentUrl
            name: name
            contentType: contentType
            content: '{}'
            thumbnailUrl: thumbnailUrl
          serviceUrl: serviceUrl
          locale: locale
          localTimezone: localTimezone
          suggestedActions:
            to:
            - to
            - to
            actions:
            - image: image
              displayText: displayText
              channelData: '{}'
              text: text
              title: title
              value: '{}'
            - image: image
              displayText: displayText
              channelData: '{}'
              text: text
              title: title
              value: '{}'
          membersAdded:
          - name: name
            aadObjectId: aadObjectId
            id: id
          - name: name
            aadObjectId: aadObjectId
            id: id
          valueType: valueType
          localTimestamp: 2000-01-23T04:56:07.000+00:00
          action: action
          listenFor:
          - listenFor
          - listenFor
          from:
            name: name
            aadObjectId: aadObjectId
            id: id
          speak: speak
          id: id
          text: text
          relatesTo:
            activityId: activityId
            bot:
              name: name
              aadObjectId: aadObjectId
              id: id
            serviceUrl: serviceUrl
            user:
              name: name
              aadObjectId: aadObjectId
              id: id
            conversation:
              conversationType: conversationType
              tenantId: tenantId
              name: name
              aadObjectId: aadObjectId
              id: id
              isGroup: true
            channelId: channelId
          value: '{}'
          channelId: channelId
          conversation:
            conversationType: conversationType
            tenantId: tenantId
            name: name
            aadObjectId: aadObjectId
            id: id
            isGroup: true
          timestamp: 2000-01-23T04:56:07.000+00:00
          summary: summary
          replyToId: replyToId
          historyDisclosed: true
          reactionsAdded:
          - {}
          - {}
          label: label
          reactionsRemoved:
          - {}
          - {}
          membersRemoved:
          - name: name
            aadObjectId: aadObjectId
            id: id
          - name: name
            aadObjectId: aadObjectId
            id: id
          entities:
          - type: type
          - type: type
          recipient:
            name: name
            aadObjectId: aadObjectId
            id: id
          name: name
          topicName: topicName
          textHighlights:
          - text: text
            occurrence: 0
          - text: text
            occurrence: 0
          expiration: 2000-01-23T04:56:07.000+00:00
          callerId: callerId
          semanticAction:
            entities:
              key:
                type: type
            id: id
        - channelData: '{}'
          attachments:
          - contentUrl: contentUrl
            name: name
            contentType: contentType
            content: '{}'
            thumbnailUrl: thumbnailUrl
          - contentUrl: contentUrl
            name: name
            contentType: contentType
            content: '{}'
            thumbnailUrl: thumbnailUrl
          serviceUrl: serviceUrl
          locale: locale
          localTimezone: localTimezone
          suggestedActions:
            to:
            - to
            - to
            actions:
            - image: image
              displayText: displayText
              channelData: '{}'
              text: text
              title: title
              value: '{}'
            - image: image
              displayText: displayText
              channelData: '{}'
              text: text
              title: title
              value: '{}'
          membersAdded:
          - name: name
            aadObjectId: aadObjectId
            id: id
          - name: name
            aadObjectId: aadObjectId
            id: id
          valueType: valueType
          localTimestamp: 2000-01-23T04:56:07.000+00:00
          action: action
          listenFor:
          - listenFor
          - listenFor
          from:
            name: name
            aadObjectId: aadObjectId
            id: id
          speak: speak
          id: id
          text: text
          relatesTo:
            activityId: activityId
            bot:
              name: name
              aadObjectId: aadObjectId
              id: id
            serviceUrl: serviceUrl
            user:
              name: name
              aadObjectId: aadObjectId
              id: id
            conversation:
              conversationType: conversationType
              tenantId: tenantId
              name: name
              aadObjectId: aadObjectId
              id: id
              isGroup: true
            channelId: channelId
          value: '{}'
          channelId: channelId
          conversation:
            conversationType: conversationType
            tenantId: tenantId
            name: name
            aadObjectId: aadObjectId
            id: id
            isGroup: true
          timestamp: 2000-01-23T04:56:07.000+00:00
          summary: summary
          replyToId: replyToId
          historyDisclosed: true
          reactionsAdded:
          - {}
          - {}
          label: label
          reactionsRemoved:
          - {}
          - {}
          membersRemoved:
          - name: name
            aadObjectId: aadObjectId
            id: id
          - name: name
            aadObjectId: aadObjectId
            id: id
          entities:
          - type: type
          - type: type
          recipient:
            name: name
            aadObjectId: aadObjectId
            id: id
          name: name
          topicName: topicName
          textHighlights:
          - text: text
            occurrence: 0
          - text: text
            occurrence: 0
          expiration: 2000-01-23T04:56:07.000+00:00
          callerId: callerId
          semanticAction:
            entities:
              key:
                type: type
            id: id
      properties:
        activities:
          description: A collection of Activities that conforms to the Transcript
            schema.
          items:
            $ref: '#/components/schemas/Activity'
          type: array
      type: object
    PagedMembersResult:
      description: Page of members.
      example:
        members:
        - name: name
          aadObjectId: aadObjectId
          id: id
        - name: name
          aadObjectId: aadObjectId
          id: id
        continuationToken: continuationToken
      properties:
        continuationToken:
          description: Paging token
          type: string
        members:
          description: The Channel Accounts.
          items:
            $ref: '#/components/schemas/ChannelAccount'
          type: array
      type: object
    AttachmentData:
      description: Attachment data
      example:
        thumbnailBase64: thumbnailBase64
        name: name
        originalBase64: originalBase64
        type: type
      properties:
        type:
          description: Content-Type of the attachment
          type: string
        name:
          description: Name of the attachment
          type: string
        originalBase64:
          description: Attachment content
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        thumbnailBase64:
          description: Attachment thumbnail
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
      type: object
    HeroCard:
      description: A Hero card (card with a single, large image)
      properties:
        title:
          description: Title of the card
          type: string
        subtitle:
          description: Subtitle of the card
          type: string
        text:
          description: Text for the card
          type: string
        images:
          description: Array of images for the card
          items:
            $ref: '#/components/schemas/CardImage'
          type: array
        buttons:
          description: Set of actions applicable to the current card
          items:
            $ref: '#/components/schemas/CardAction'
          type: array
        tap:
          $ref: '#/components/schemas/CardAction'
      type: object
    CardImage:
      description: An image on a card
      properties:
        url:
          description: URL thumbnail image for major content property
          type: string
        alt:
          description: Image description intended for screen readers
          type: string
        tap:
          $ref: '#/components/schemas/CardAction'
      type: object
    AnimationCard:
      description: 'An animation card (Ex: gif or short video clip)'
      properties:
        title:
          description: Title of this card
          type: string
        subtitle:
          description: Subtitle of this card
          type: string
        text:
          description: Text of this card
          type: string
        image:
          $ref: '#/components/schemas/ThumbnailUrl'
        media:
          description: Media URLs for this card. When this field contains more than
            one URL, each URL is an alternative format of the same content.
          items:
            $ref: '#/components/schemas/MediaUrl'
          type: array
        buttons:
          description: Actions on this card
          items:
            $ref: '#/components/schemas/CardAction'
          type: array
        shareable:
          description: This content may be shared with others (default:true)
          type: boolean
        autoloop:
          description: Should the client loop playback at end of content (default:true)
          type: boolean
        autostart:
          description: Should the client automatically start playback of media in
            this card (default:true)
          type: boolean
        aspect:
          description: Aspect ratio of thumbnail/media placeholder. Allowed values
            are "16:9" and "4:3"
          type: string
        duration:
          description: Describes the length of the media content without requiring
            a receiver to open the content. Formatted as an ISO 8601 Duration field.
          type: string
        value:
          description: Supplementary parameter for this card
          properties: {}
          type: object
      type: object
    ThumbnailUrl:
      description: Thumbnail URL
      properties:
        url:
          description: URL pointing to the thumbnail to use for media content
          type: string
        alt:
          description: HTML alt text to include on this thumbnail image
          type: string
      type: object
    MediaUrl:
      description: Media URL
      properties:
        url:
          description: Url for the media
          type: string
        profile:
          description: Optional profile hint to the client to differentiate multiple
            MediaUrl objects from each other
          type: string
      type: object
    AudioCard:
      description: Audio card
      properties:
        title:
          description: Title of this card
          type: string
        subtitle:
          description: Subtitle of this card
          type: string
        text:
          description: Text of this card
          type: string
        image:
          $ref: '#/components/schemas/ThumbnailUrl'
        media:
          description: Media URLs for this card. When this field contains more than
            one URL, each URL is an alternative format of the same content.
          items:
            $ref: '#/components/schemas/MediaUrl'
          type: array
        buttons:
          description: Actions on this card
          items:
            $ref: '#/components/schemas/CardAction'
          type: array
        shareable:
          description: This content may be shared with others (default:true)
          type: boolean
        autoloop:
          description: Should the client loop playback at end of content (default:true)
          type: boolean
        autostart:
          description: Should the client automatically start playback of media in
            this card (default:true)
          type: boolean
        aspect:
          description: Aspect ratio of thumbnail/media placeholder. Allowed values
            are "16:9" and "4:3"
          type: string
        duration:
          description: Describes the length of the media content without requiring
            a receiver to open the content. Formatted as an ISO 8601 Duration field.
          type: string
        value:
          description: Supplementary parameter for this card
          properties: {}
          type: object
      type: object
    BasicCard:
      description: A basic card
      properties:
        title:
          description: Title of the card
          type: string
        subtitle:
          description: Subtitle of the card
          type: string
        text:
          description: Text for the card
          type: string
        images:
          description: Array of images for the card
          items:
            $ref: '#/components/schemas/CardImage'
          type: array
        buttons:
          description: Set of actions applicable to the current card
          items:
            $ref: '#/components/schemas/CardAction'
          type: array
        tap:
          $ref: '#/components/schemas/CardAction'
      type: object
    MediaCard:
      description: Media card
      properties:
        title:
          description: Title of this card
          type: string
        subtitle:
          description: Subtitle of this card
          type: string
        text:
          description: Text of this card
          type: string
        image:
          $ref: '#/components/schemas/ThumbnailUrl'
        media:
          description: Media URLs for this card. When this field contains more than
            one URL, each URL is an alternative format of the same content.
          items:
            $ref: '#/components/schemas/MediaUrl'
          type: array
        buttons:
          description: Actions on this card
          items:
            $ref: '#/components/schemas/CardAction'
          type: array
        shareable:
          description: This content may be shared with others (default:true)
          type: boolean
        autoloop:
          description: Should the client loop playback at end of content (default:true)
          type: boolean
        autostart:
          description: Should the client automatically start playback of media in
            this card (default:true)
          type: boolean
        aspect:
          description: Aspect ratio of thumbnail/media placeholder. Allowed values
            are "16:9" and "4:3"
          type: string
        duration:
          description: Describes the length of the media content without requiring
            a receiver to open the content. Formatted as an ISO 8601 Duration field.
          type: string
        value:
          description: Supplementary parameter for this card
          properties: {}
          type: object
      type: object
    ReceiptCard:
      description: A receipt card
      properties:
        title:
          description: Title of the card
          type: string
        facts:
          description: Array of Fact objects
          items:
            $ref: '#/components/schemas/Fact'
          type: array
        items:
          description: Array of Receipt Items
          items:
            $ref: '#/components/schemas/ReceiptItem'
          type: array
        tap:
          $ref: '#/components/schemas/CardAction'
        total:
          description: Total amount of money paid (or to be paid)
          type: string
        tax:
          description: Total amount of tax paid (or to be paid)
          type: string
        vat:
          description: Total amount of VAT paid (or to be paid)
          type: string
        buttons:
          description: Set of actions applicable to the current card
          items:
            $ref: '#/components/schemas/CardAction'
          type: array
      type: object
    Fact:
      description: "Set of key-value pairs. Advantage of this section is that key\
        \ and value properties will be \r\nrendered with default style information\
        \ with some delimiter between them. So there is no need for developer to specify\
        \ style information."
      properties:
        key:
          description: The key for this Fact
          type: string
        value:
          description: The value for this Fact
          type: string
      type: object
    ReceiptItem:
      description: An item on a receipt card
      properties:
        title:
          description: Title of the Card
          type: string
        subtitle:
          description: Subtitle appears just below Title field, differs from Title
            in font styling only
          type: string
        text:
          description: Text field appears just below subtitle, differs from Subtitle
            in font styling only
          type: string
        image:
          $ref: '#/components/schemas/CardImage'
        price:
          description: Amount with currency
          type: string
        quantity:
          description: Number of items of given kind
          type: string
        tap:
          $ref: '#/components/schemas/CardAction'
      type: object
    SigninCard:
      description: A card representing a request to sign in
      properties:
        text:
          description: Text for signin request
          type: string
        buttons:
          description: Action to use to perform signin
          items:
            $ref: '#/components/schemas/CardAction'
          type: array
      type: object
    OAuthCard:
      description: A card representing a request to perform a sign in via OAuth
      properties:
        text:
          description: Text for signin request
          type: string
        connectionName:
          description: The name of the registered connection
          type: string
        buttons:
          description: Action to use to perform signin
          items:
            $ref: '#/components/schemas/CardAction'
          type: array
      type: object
    ThumbnailCard:
      description: A thumbnail card (card with a single, small thumbnail image)
      properties:
        title:
          description: Title of the card
          type: string
        subtitle:
          description: Subtitle of the card
          type: string
        text:
          description: Text for the card
          type: string
        images:
          description: Array of images for the card
          items:
            $ref: '#/components/schemas/CardImage'
          type: array
        buttons:
          description: Set of actions applicable to the current card
          items:
            $ref: '#/components/schemas/CardAction'
          type: array
        tap:
          $ref: '#/components/schemas/CardAction'
      type: object
    VideoCard:
      description: Video card
      properties:
        title:
          description: Title of this card
          type: string
        subtitle:
          description: Subtitle of this card
          type: string
        text:
          description: Text of this card
          type: string
        image:
          $ref: '#/components/schemas/ThumbnailUrl'
        media:
          description: Media URLs for this card. When this field contains more than
            one URL, each URL is an alternative format of the same content.
          items:
            $ref: '#/components/schemas/MediaUrl'
          type: array
        buttons:
          description: Actions on this card
          items:
            $ref: '#/components/schemas/CardAction'
          type: array
        shareable:
          description: This content may be shared with others (default:true)
          type: boolean
        autoloop:
          description: Should the client loop playback at end of content (default:true)
          type: boolean
        autostart:
          description: Should the client automatically start playback of media in
            this card (default:true)
          type: boolean
        aspect:
          description: Aspect ratio of thumbnail/media placeholder. Allowed values
            are "16:9" and "4:3"
          type: string
        duration:
          description: Describes the length of the media content without requiring
            a receiver to open the content. Formatted as an ISO 8601 Duration field.
          type: string
        value:
          description: Supplementary parameter for this card
          properties: {}
          type: object
      type: object
    GeoCoordinates:
      description: 'GeoCoordinates (entity type: "https://schema.org/GeoCoordinates")'
      properties:
        elevation:
          description: Elevation of the location [WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)
          format: double
          type: number
        latitude:
          description: Latitude of the location [WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)
          format: double
          type: number
        longitude:
          description: Longitude of the location [WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)
          format: double
          type: number
        type:
          description: The type of the thing
          type: string
        name:
          description: The name of the thing
          type: string
      type: object
    Mention:
      description: 'Mention information (entity type: "mention")'
      properties:
        mentioned:
          $ref: '#/components/schemas/ChannelAccount'
        text:
          description: Sub Text which represents the mention (can be null or empty)
          type: string
        type:
          description: Type of this entity (RFC 3987 IRI)
          type: string
      type: object
    Place:
      description: 'Place (entity type: "https://schema.org/Place")'
      properties:
        address:
          description: Address of the place (may be `string` or complex object of
            type `PostalAddress`)
          properties: {}
          type: object
        geo:
          description: Geo coordinates of the place (may be complex object of type
            `GeoCoordinates` or `GeoShape`)
          properties: {}
          type: object
        hasMap:
          description: Map to the place (may be `string` (URL) or complex object of
            type `Map`)
          properties: {}
          type: object
        type:
          description: The type of the thing
          type: string
        name:
          description: The name of the thing
          type: string
      type: object
    Thing:
      description: 'Thing (entity type: "https://schema.org/Thing")'
      properties:
        type:
          description: The type of the thing
          type: string
        name:
          description: The name of the thing
          type: string
      type: object
    MediaEventValue:
      description: Supplementary parameter for media events
      properties:
        cardValue:
          description: Callback parameter specified in the Value field of the MediaCard
            that originated this event
          properties: {}
          type: object
      type: object
    TokenRequest:
      description: A request to receive a user token
      properties:
        provider:
          description: The provider to request a user token from
          type: string
        settings:
          additionalProperties:
            properties: {}
            type: object
          description: A collection of settings for the specific provider for this
            request
          type: object
      type: object
    TokenResponse:
      description: A response that includes a user token
      properties:
        channelId:
          description: The channelId of the TokenResponse
          type: string
        connectionName:
          description: The connection name
          type: string
        token:
          description: The user token
          type: string
        expiration:
          description: Expiration for the token, in ISO 8601 format (e.g. "2007-04-05T14:30Z")
          type: string
      type: object
    ActivityTypes:
      description: Types of Activities
      enum:
      - message
      - contactRelationUpdate
      - conversationUpdate
      - typing
      - endOfConversation
      - event
      - invoke
      - deleteUserData
      - messageUpdate
      - messageDelete
      - installationUpdate
      - messageReaction
      - suggestion
      - trace
      - handoff
      type: string
      x-ms-enum:
        name: ActivityTypes
        modelAsString: true
    AttachmentLayoutTypes:
      description: Attachment layout types
      enum:
      - list
      - carousel
      type: string
      x-ms-enum:
        name: AttachmentLayoutTypes
        modelAsString: true
    SemanticActionStates:
      description: Indicates whether the semantic action is starting, continuing,
        or done
      enum:
      - start
      - continue
      - done
      type: string
      x-ms-enum:
        name: SemanticActionStates
        modelAsString: true
    ActionTypes:
      description: Defines action types for clickable buttons.
      enum:
      - openUrl
      - imBack
      - postBack
      - playAudio
      - playVideo
      - showImage
      - downloadFile
      - signin
      - call
      - payment
      - messageBack
      type: string
      x-ms-enum:
        name: ActionTypes
        modelAsString: true
    ContactRelationUpdateActionTypes:
      description: Action types valid for ContactRelationUpdate activities
      enum:
      - add
      - remove
      type: string
      x-ms-enum:
        name: ContactRelationUpdateActionTypes
        modelAsString: true
    InstallationUpdateActionTypes:
      description: Action types valid for InstallationUpdate activities
      enum:
      - add
      - remove
      type: string
      x-ms-enum:
        name: InstallationUpdateActionTypes
        modelAsString: true
    MessageReactionTypes:
      description: Message reaction types
      enum:
      - like
      - plusOne
      type: string
      x-ms-enum:
        name: MessageReactionTypes
        modelAsString: true
    TextFormatTypes:
      description: Text format types
      enum:
      - markdown
      - plain
      - xml
      type: string
      x-ms-enum:
        name: TextFormatTypes
        modelAsString: true
    InputHints:
      description: Indicates whether the bot is accepting, expecting, or ignoring
        input
      enum:
      - acceptingInput
      - ignoringInput
      - expectingInput
      type: string
      x-ms-enum:
        name: InputHints
        modelAsString: true
    EndOfConversationCodes:
      description: Codes indicating why a conversation has ended
      enum:
      - unknown
      - completedSuccessfully
      - userCancelled
      - botTimedOut
      - botIssuedInvalidMessage
      - channelFailed
      type: string
      x-ms-enum:
        name: EndOfConversationCodes
        modelAsString: true
    ActivityImportance:
      description: Defines the importance of an Activity
      enum:
      - low
      - normal
      - high
      type: string
      x-ms-enum:
        name: ActivityImportance
        modelAsString: true
    RoleTypes:
      description: 'Role of the entity behind the account (Example: User, Bot, etc.)'
      enum:
      - user
      - bot
      type: string
      x-ms-enum:
        name: RoleTypes
        modelAsString: true
    DeliveryModes:
      description: Values for deliveryMode field
      enum:
      - normal
      - notification
      type: string
      x-ms-enum:
        name: DeliveryModes
        modelAsString: true
    MicrosoftPayMethodData:
      description: W3C Payment Method Data for Microsoft Pay
      properties:
        merchantId:
          description: Microsoft Pay Merchant ID
          type: string
        supportedNetworks:
          description: Supported payment networks (e.g., "visa" and "mastercard")
          items:
            type: string
          type: array
        supportedTypes:
          description: Supported payment types (e.g., "credit")
          items:
            type: string
          type: array
      type: object
    PaymentAddress:
      description: Address within a Payment Request
      properties:
        country:
          description: This is the CLDR (Common Locale Data Repository) region code.
            For example, US, GB, CN, or JP
          type: string
        addressLine:
          description: This is the most specific part of the address. It can include,
            for example, a street name, a house number, apartment number, a rural
            delivery route, descriptive instructions, or a post office box number.
          items:
            type: string
          type: array
        region:
          description: This is the top level administrative subdivision of the country.
            For example, this can be a state, a province, an oblast, or a prefecture.
          type: string
        city:
          description: This is the city/town portion of the address.
          type: string
        dependentLocality:
          description: This is the dependent locality or sublocality within a city.
            For example, used for neighborhoods, boroughs, districts, or UK dependent
            localities.
          type: string
        postalCode:
          description: This is the postal code or ZIP code, also known as PIN code
            in India.
          type: string
        sortingCode:
          description: This is the sorting code as used in, for example, France.
          type: string
        languageCode:
          description: This is the BCP-47 language code for the address. It's used
            to determine the field separators and the order of fields when formatting
            the address for display.
          type: string
        organization:
          description: This is the organization, firm, company, or institution at
            this address.
          type: string
        recipient:
          description: This is the name of the recipient or contact person.
          type: string
        phone:
          description: This is the phone number of the recipient or contact person.
          type: string
      type: object
    PaymentCurrencyAmount:
      description: Supplies monetary amounts
      properties:
        currency:
          description: A currency identifier
          type: string
        value:
          description: Decimal monetary value
          type: string
        currencySystem:
          description: Currency system
          type: string
      type: object
    PaymentDetails:
      description: Provides information about the requested transaction
      properties:
        total:
          $ref: '#/components/schemas/PaymentItem'
        displayItems:
          description: Contains line items for the payment request that the user agent
            may display
          items:
            $ref: '#/components/schemas/PaymentItem'
          type: array
        shippingOptions:
          description: A sequence containing the different shipping options for the
            user to choose from
          items:
            $ref: '#/components/schemas/PaymentShippingOption'
          type: array
        modifiers:
          description: Contains modifiers for particular payment method identifiers
          items:
            $ref: '#/components/schemas/PaymentDetailsModifier'
          type: array
        error:
          description: Error description
          type: string
      type: object
    PaymentItem:
      description: Indicates what the payment request is for and the value asked for
      properties:
        label:
          description: Human-readable description of the item
          type: string
        amount:
          $ref: '#/components/schemas/PaymentCurrencyAmount'
        pending:
          description: When set to true this flag means that the amount field is not
            final.
          type: boolean
      type: object
    PaymentShippingOption:
      description: Describes a shipping option
      properties:
        id:
          description: String identifier used to reference this PaymentShippingOption
          type: string
        label:
          description: Human-readable description of the item
          type: string
        amount:
          $ref: '#/components/schemas/PaymentCurrencyAmount'
        selected:
          description: Indicates whether this is the default selected PaymentShippingOption
          type: boolean
      type: object
    PaymentDetailsModifier:
      description: Provides details that modify the PaymentDetails based on payment
        method identifier
      properties:
        supportedMethods:
          description: Contains a sequence of payment method identifiers
          items:
            type: string
          type: array
        total:
          $ref: '#/components/schemas/PaymentItem'
        additionalDisplayItems:
          description: Provides additional display items that are appended to the
            displayItems field in the PaymentDetails dictionary for the payment method
            identifiers in the supportedMethods field
          items:
            $ref: '#/components/schemas/PaymentItem'
          type: array
        data:
          description: A JSON-serializable object that provides optional information
            that might be needed by the supported payment methods
          properties: {}
          type: object
      type: object
    PaymentMethodData:
      description: Indicates a set of supported payment methods and any associated
        payment method specific data for those methods
      properties:
        supportedMethods:
          description: Required sequence of strings containing payment method identifiers
            for payment methods that the merchant web site accepts
          items:
            type: string
          type: array
        data:
          description: A JSON-serializable object that provides optional information
            that might be needed by the supported payment methods
          properties: {}
          type: object
      type: object
    PaymentOptions:
      description: Provides information about the options desired for the payment
        request
      properties:
        requestPayerName:
          description: Indicates whether the user agent should collect and return
            the payer's name as part of the payment request
          type: boolean
        requestPayerEmail:
          description: Indicates whether the user agent should collect and return
            the payer's email address as part of the payment request
          type: boolean
        requestPayerPhone:
          description: Indicates whether the user agent should collect and return
            the payer's phone number as part of the payment request
          type: boolean
        requestShipping:
          description: Indicates whether the user agent should collect and return
            a shipping address as part of the payment request
          type: boolean
        shippingType:
          description: If requestShipping is set to true, then the shippingType field
            may be used to influence the way the user agent presents the user interface
            for gathering the shipping address
          type: string
      type: object
    PaymentRequest:
      description: A request to make a payment
      properties:
        id:
          description: ID of this payment request
          type: string
        methodData:
          description: Allowed payment methods for this request
          items:
            $ref: '#/components/schemas/PaymentMethodData'
          type: array
        details:
          $ref: '#/components/schemas/PaymentDetails'
        options:
          $ref: '#/components/schemas/PaymentOptions'
        expires:
          description: Expiration for this request, in ISO 8601 duration format (e.g.,
            'P1D')
          type: string
      type: object
    PaymentRequestComplete:
      description: Payload delivered when completing a payment request
      properties:
        id:
          description: Payment request ID
          type: string
        paymentRequest:
          $ref: '#/components/schemas/PaymentRequest'
        paymentResponse:
          $ref: '#/components/schemas/PaymentResponse'
      type: object
    PaymentResponse:
      description: A PaymentResponse is returned when a user has selected a payment
        method and approved a payment request
      properties:
        methodName:
          description: The payment method identifier for the payment method that the
            user selected to fulfil the transaction
          type: string
        details:
          description: A JSON-serializable object that provides a payment method specific
            message used by the merchant to process the transaction and determine
            successful fund transfer
          properties: {}
          type: object
        shippingAddress:
          $ref: '#/components/schemas/PaymentAddress'
        shippingOption:
          description: If the requestShipping flag was set to true in the PaymentOptions
            passed to the PaymentRequest constructor, then shippingOption will be
            the id attribute of the selected shipping option
          type: string
        payerEmail:
          description: If the requestPayerEmail flag was set to true in the PaymentOptions
            passed to the PaymentRequest constructor, then payerEmail will be the
            email address chosen by the user
          type: string
        payerPhone:
          description: If the requestPayerPhone flag was set to true in the PaymentOptions
            passed to the PaymentRequest constructor, then payerPhone will be the
            phone number chosen by the user
          type: string
      type: object
    PaymentRequestCompleteResult:
      description: Result from a completed payment request
      properties:
        result:
          description: Result of the payment request completion
          type: string
      type: object
    PaymentRequestUpdate:
      description: An update to a payment request
      properties:
        id:
          description: ID for the payment request to update
          type: string
        details:
          $ref: '#/components/schemas/PaymentDetails'
        shippingAddress:
          $ref: '#/components/schemas/PaymentAddress'
        shippingOption:
          description: Updated shipping options
          type: string
      type: object
    PaymentRequestUpdateResult:
      description: A result object from a Payment Request Update invoke operation
      properties:
        details:
          $ref: '#/components/schemas/PaymentDetails'
      type: object
  securitySchemes:
    bearer_auth:
      description: Access token to authenticate calls to the Bot Connector Service.
      in: header
      name: Authorization
      type: apiKey
